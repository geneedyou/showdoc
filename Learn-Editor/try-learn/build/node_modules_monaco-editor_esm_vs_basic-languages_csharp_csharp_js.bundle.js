"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunktry_learn"] = self["webpackChunktry_learn"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_csharp_csharp_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js":
/*!****************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": function() { return /* binding */ conf; },\n/* harmony export */   \"language\": function() { return /* binding */ language; }\n/* harmony export */ });\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.regexp.constructor.js */ \"./node_modules/core-js/modules/es.regexp.constructor.js\");\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_regexp_dot_all_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.regexp.dot-all.js */ \"./node_modules/core-js/modules/es.regexp.dot-all.js\");\n/* harmony import */ var core_js_modules_es_regexp_dot_all_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_dot_all_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"./node_modules/core-js/modules/es.regexp.exec.js\");\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es_regexp_sticky_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.regexp.sticky.js */ \"./node_modules/core-js/modules/es.regexp.sticky.js\");\n/* harmony import */ var core_js_modules_es_regexp_sticky_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_sticky_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"./node_modules/core-js/modules/es.regexp.to-string.js\");\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.1(337587859b1c171314b40503171188b6cea6a32a)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n// src/basic-languages/csharp/csharp.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\", \"comment\"]\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".cs\",\n  brackets: [{\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.curly\"\n  }, {\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.square\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }, {\n    open: \"<\",\n    close: \">\",\n    token: \"delimiter.angle\"\n  }],\n  keywords: [\"extern\", \"alias\", \"using\", \"bool\", \"decimal\", \"sbyte\", \"byte\", \"short\", \"ushort\", \"int\", \"uint\", \"long\", \"ulong\", \"char\", \"float\", \"double\", \"object\", \"dynamic\", \"string\", \"assembly\", \"is\", \"as\", \"ref\", \"out\", \"this\", \"base\", \"new\", \"typeof\", \"void\", \"checked\", \"unchecked\", \"default\", \"delegate\", \"var\", \"const\", \"if\", \"else\", \"switch\", \"case\", \"while\", \"do\", \"for\", \"foreach\", \"in\", \"break\", \"continue\", \"goto\", \"return\", \"throw\", \"try\", \"catch\", \"finally\", \"lock\", \"yield\", \"from\", \"let\", \"where\", \"join\", \"on\", \"equals\", \"into\", \"orderby\", \"ascending\", \"descending\", \"select\", \"group\", \"by\", \"namespace\", \"partial\", \"class\", \"field\", \"event\", \"method\", \"param\", \"public\", \"protected\", \"internal\", \"private\", \"abstract\", \"sealed\", \"static\", \"struct\", \"readonly\", \"volatile\", \"virtual\", \"override\", \"params\", \"get\", \"set\", \"add\", \"remove\", \"operator\", \"true\", \"false\", \"implicit\", \"explicit\", \"interface\", \"enum\", \"null\", \"async\", \"await\", \"fixed\", \"sizeof\", \"stackalloc\", \"unsafe\", \"nameof\", \"when\"],\n  namespaceFollows: [\"namespace\", \"using\"],\n  parenFollows: [\"if\", \"for\", \"while\", \"switch\", \"foreach\", \"using\", \"catch\", \"when\"],\n  operators: [\"=\", \"??\", \"||\", \"&&\", \"|\", \"^\", \"&\", \"==\", \"!=\", \"<=\", \">=\", \"<<\", \"+\", \"-\", \"*\", \"/\", \"%\", \"!\", \"~\", \"++\", \"--\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\", \"&=\", \"|=\", \"^=\", \"<<=\", \">>=\", \">>\", \"=>\"],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [[/\\@?[a-zA-Z_]\\w*/, {\n      cases: {\n        \"@namespaceFollows\": {\n          token: \"keyword.$0\",\n          next: \"@namespace\"\n        },\n        \"@keywords\": {\n          token: \"keyword.$0\",\n          next: \"@qualified\"\n        },\n        \"@default\": {\n          token: \"identifier\",\n          next: \"@qualified\"\n        }\n      }\n    }], {\n      include: \"@whitespace\"\n    }, [/}/, {\n      cases: {\n        \"$S2==interpolatedstring\": {\n          token: \"string.quote\",\n          next: \"@pop\"\n        },\n        \"$S2==litinterpstring\": {\n          token: \"string.quote\",\n          next: \"@pop\"\n        },\n        \"@default\": \"@brackets\"\n      }\n    }], [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, {\n      cases: {\n        \"@operators\": \"delimiter\",\n        \"@default\": \"\"\n      }\n    }], [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, \"number.float\"], [/0[xX][0-9a-fA-F_]+/, \"number.hex\"], [/0[bB][01_]+/, \"number.hex\"], [/[0-9_]+/, \"number\"], [/[;,.]/, \"delimiter\"], [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, {\n      token: \"string.quote\",\n      next: \"@string\"\n    }], [/\\$\\@\"/, {\n      token: \"string.quote\",\n      next: \"@litinterpstring\"\n    }], [/\\@\"/, {\n      token: \"string.quote\",\n      next: \"@litstring\"\n    }], [/\\$\"/, {\n      token: \"string.quote\",\n      next: \"@interpolatedstring\"\n    }], [/'[^\\\\']'/, \"string\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]], [/'/, \"string.invalid\"]],\n    qualified: [[/[a-zA-Z_][\\w]*/, {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@default\": \"identifier\"\n      }\n    }], [/\\./, \"delimiter\"], [\"\", \"\", \"@pop\"]],\n    namespace: [{\n      include: \"@whitespace\"\n    }, [/[A-Z]\\w*/, \"namespace\"], [/[\\.=]/, \"delimiter\"], [\"\", \"\", \"@pop\"]],\n    comment: [[/[^\\/*]+/, \"comment\"], [\"\\\\*/\", \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]],\n    string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, {\n      token: \"string.quote\",\n      next: \"@pop\"\n    }]],\n    litstring: [[/[^\"]+/, \"string\"], [/\"\"/, \"string.escape\"], [/\"/, {\n      token: \"string.quote\",\n      next: \"@pop\"\n    }]],\n    litinterpstring: [[/[^\"{]+/, \"string\"], [/\"\"/, \"string.escape\"], [/{{/, \"string.escape\"], [/}}/, \"string.escape\"], [/{/, {\n      token: \"string.quote\",\n      next: \"root.litinterpstring\"\n    }], [/\"/, {\n      token: \"string.quote\",\n      next: \"@pop\"\n    }]],\n    interpolatedstring: [[/[^\\\\\"{]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/{{/, \"string.escape\"], [/}}/, \"string.escape\"], [/{/, {\n      token: \"string.quote\",\n      next: \"root.interpolatedstring\"\n    }], [/\"/, {\n      token: \"string.quote\",\n      next: \"@pop\"\n    }]],\n    whitespace: [[/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, \"directive.csx\"], [/^[ \\t\\v\\f]*#\\w.*$/, \"namespace.cpp\"], [/[ \\t\\v\\f\\r\\n]+/, \"\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]]\n  }\n};\n\n\n//# sourceURL=webpack://try-learn/./node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js?");

/***/ })

}]);